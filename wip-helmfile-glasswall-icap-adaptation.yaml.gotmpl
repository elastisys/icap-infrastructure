environment:
rabbitmqService:
  name: rabbitmq-service
  port: 5672
  managementPort: 15672
  component: rabbitmq
  app: taskQueue
  key: rabbitmq-cluster-operator
serviceAccount:
  adaptationname: adaptation-service-sa
  archiveadaptationname: archive-adaptation-service-sa
  policyupdatename: policy-update-service-sa
  janitorname: pod-janitor-sa
volumemountpath:
  source: "/var/source"
  target: "/var/target"
  transactions: /mnt/transactions
prometheus:
  metricsport: 8080
queue:
  host:
    url: "rabbitmq-service" # this should be deprecated in preference to queue specific hostname
    port: "\"5672\"" # this should be deprecated in preference to queue specific port
  adaptationRequest:
    exchangename: "adaptation-exchange"
    requestqueuename: "adaptation-request-queue"
    replyqueuename: "amq.rabbitmq.reply-to"
    messagename: "adaptation-request"
    hostname: "rabbitmq-service"
    port: "\"5672\""
  archiveadaptationrequest:
    hostname: "rabbitmq-service"
    port: "\"5672\""
  transactionevent:
    hostname: "rabbitmq-service"
    port: "\"5672\""
adaptationservice:
  name: adaptation-service
  replicas: 1
  amqpurl: "amqp://guest:guest@rabbitmq-service:5672/"
  rolename: adaptation-service-role
archiveadaptationservice:
  name: archive-adaptation-service
  namespace: icap-adaptation
  replicas: 1
  amqpurl: "amqp://guest:guest@rabbitmq-service:5672/"
  exchange: adaptation-exchange
  rolename: archive-adaptation-service-role
icapservice:
  name: mvp-icap-service
  applabel: adaptation
  replicas: 1
  port: 1344
  tlsport: 1345
  enableFileId: true
icapserviceconfig:
  processingtimeoutduration: 00:01:00
podjanitor:
  name: pod-janitor
  namespace: icap-adaptation
  rolename: janitor-role
  deleteSuccessfulAfter: 1m
  deleteFailedAfter: 3m
eventsubmissionservice:
  name: event-submission-service
  replicas: 1
  amqpurl: "" # this should be deprecated in preference to queue specific hostname
policyupdateservice:
  name: policy-update-service
  applabel: policyupdate
  replicas: 1
  port: 10000
  rolename: policy-update-service-role
  existingSecret: policyupdateservicesecret
requestprocessingservice:
  configmapname: request-processing-config
  cpulimit: 1
  cpurequest: 0.2
  memorylimit: 10000Mi
  memoryrequest: 250Mi
transactionqueryservice:
  fullnameOverride: transaction-query-service
  replicaCount: 1
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 443
  deployment:
    containerPort: 443
  probes:
    enabled: false
  ingress:
    enabled: false
    annotations: {}
    path: /
    tls: []
  volumes:
    transactionstore:
      shareName: transactions
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
transactionstore:
  shareName: transactions
  storage: 3Gi
imagestore:
  requestprocessing:
    registry: ""
    repository: elastisys/icap-request-processing
    tag: v0.2
  adaptationservice:
    registry: ""
    repository: elastisys/icap-adaptation-service
    tag: v0.2
  podjanitor:
    registry: ""
    repository: glasswallsolutions/pod-janitor
    tag: develop-dd4c0f8
  icapservice:
    registry: ""
    repository: glasswallsolutions/mvp-icap-service
    tag: develop-7cfec20
  eventsubmission:
    registry: ""
    repository: glasswallsolutions/event-submission-service
    tag: develop-1f75835
  policyupdate:
    registry: ""
    repository: glasswallsolutions/policy-update-service
    tag: develop-ba3016f
  archiveadaptationservice:
    registry: ""
    repository: glasswallsolutions/archive-adaptation-service
    tag: develop-5b883e3
  archiveprocessingservice:
    registry: ""
    repository: glasswallsolutions/archive-processing-service
    tag: develop-897191b
  transactionqueryservice:
    registry: ""
    repository: glasswallsolutions/transaction-query-service
    tag: develop-2cc1cbf
secrets:
  containerregistry:
    dockerconfigjson: "<<https://gw-icap-keyvault.vault.azure.net/secrets/az-registry-dockerconfig>>"
  transactionqueryservice:
    transactionqueryservicesecret:
      username: "guest"
      password: "guest"
  policyupdateservice:
    policyupdateservicesecret:
      username: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyUpdateServiceUsername>>"
      password: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/policyUpdateServicePassword>>"
  transactionstore:
    transactionstoresecret:
      accountname: "guest"
      accountkey: "guest"
  mvpicapservice:
    tls:
      tlsCert: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/mvpicapserviceTlsCert>>"
      tlsKey: "<<https://gw-tfstate-Vault.vault.azure.net/secrets/mvpicapserviceTlsKey>>"
